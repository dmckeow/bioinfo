nextflow.enable.dsl = 2

params {
    samplesheet = '/users/asebe/dmckeown/projects/crg-bcaortho/data/MetazoansTest/samplesheet-part2-2.csv'
    outdir = 'results/MetazoansTest-part2-2'
    runName = 'MetazoansTest-part2-2'

    interproscan {
        script = "/users/asebe/dmckeown/public_resources/interproscan-5.59-91.0/interproscan.sh"
        args = ""
    }
}

// Profiles for resource, env, container management
profiles {
    local {
        process.executor = 'local'
        singularity.enabled = true
        singularity.pullout = '1h'
        conda.enabled = true
        conda.useMamba = true
        process {
            cpus = 8
            memory = 30.GB
        }
    }
    slurm {
        singularity.enabled = true
        singularity.pullout = '1h'
        singularity.autoMounts = true
        conda.enabled = true
        conda.useMamba = true
        process {
            executor = 'slurm'

            // Default resources for all processes
            cache='lenient'
            queue='genoa64'
            clusterOptions = '--qos=vshort'
            cpus = 2
            memory = 4.GB
            time = '30m'
            
            // Specific resources
            withName: 'INTERPROSCAN' {
                clusterOptions = '--qos=shorter'
                cpus = 4
                memory = 8.GB
                time = '1h'
            } 
        }

        executor {
            name = 'slurm'
            queueSize = 100
            submitRateLimit = '1 sec'
        }
    } 
    slurm_big {
        singularity.enabled = true
        singularity.pullout = '1h'
        singularity.autoMounts = true
        conda.enabled = true
        conda.useMamba = true
        process {
            executor = 'slurm'

            // Default resources for all processes:
            cache='lenient'
            queue='genoa64'
            clusterOptions = '--qos=normal'
            cpus = 4
            memory = 32.GB
            time = '12h'
            
            // Specific resources
            withName: 'INTERPROSCAN' {
                clusterOptions = '--qos=vlong'
                cpus = 8
                memory = 64.GB
                time = '2d'
            }
        }

        executor {
            name = 'slurm'
            queueSize = 200
            submitRateLimit = '1 sec'
        }
    } 
}

// Publishing directories
process {
    
    withName: 'INTERPROSCAN' {
        publishDir = [
            path: { "${params.outdir}/interproscan"},
            mode: 'symlink',
            saveAs: { filename -> filename }
        ]
        ext.args = params.interproscan.args
    }

}



// Management stuff
manifest {
    name = 'bioinfo'
    description = 'workflow collection'
    author = 'Dean Mckeown'
    version = '1.0.0'
    nextflowVersion = '24.10.2'
    homePage = 'https://github.com/dmckeow/bioinfo'
}

// Resource usage reports

workflow.onComplete = {
    println "Pipeline completed at: $workflow.complete"
    println "Execution status: ${ workflow.success ? 'OK' : 'failed' }"
    println "Pipeline parameters:"
    params.each { k, v ->
        println "  $k: $v"
    }
}

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
report {
    enabled = true
    file = "${params.outdir}/pipeline_info/${trace_timestamp}_execution_report.html"
    showSkipped = false
    showTaskCacheInfo = false
    showTaskResources = true
    showTaskResourcesPercentage = true
}

timeline {
    enabled = true
    file = "${params.outdir}/pipeline_info/${trace_timestamp}_execution_timeline.html"
}

trace {
    enabled = true
    file = "${params.outdir}/pipeline_info/${trace_timestamp}_execution_trace.tsv"
    fields = 'task_id,hash,native_id,process,tag,name,status,exit,module,container,cpus,time,disk,memory,attempt,submit,start,complete,duration,realtime,queue,%cpu,%mem,rss,vmem,peak_rss,peak_vmem,rchar,wchar,syscr,syscw,read_bytes,write_bytes'
}

dag {
    enabled = true
    file = "${params.outdir}/pipeline_info/${trace_timestamp}_pipeline_dag.png"
}

